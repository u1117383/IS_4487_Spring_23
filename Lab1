{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/u1117383/IS_4487_Spring_23/blob/main/Module1_Script_v1_2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p_Yu45OYdj3Y"
      },
      "source": [
        "# IS 4487 Module 1 Script\n",
        "# Lauren Lengel\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "## Agenda\n",
        "\n",
        "- Loading installed packages\n",
        "- Inspect data\n",
        "- Explore plot types \n",
        "\n",
        "Make sure you have downloaded tonight's script and data from Canvas."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UE93RwXhgiJS"
      },
      "source": [
        "##Load Libraries\n",
        "\n",
        "In this class we will be using \n",
        "- Pandas\n",
        "- Scikitlearn\n",
        "- Matplotlib\n",
        "\n",
        "We can pull sample data from \n",
        "- statsmodels.api"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JYRZY5n0gfNe"
      },
      "source": [
        "# pandas = rows and columns\n",
        "import pandas as pd\n",
        "# \n",
        "import matplotlib as mpl\n",
        "# \n",
        "import sklearn as sl\n",
        "#\n",
        "import statsmodels.api as sm"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bREaXo8jfu-O"
      },
      "source": [
        "## Getting data into Pandas\n",
        "\n",
        "In this case we will load data from the statsmodels.org library\n",
        "\n",
        "MTCARS is a traditional dataset used for learning.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6_FwprxVgR0e",
        "outputId": "947f617c-2bf7-4466-dfa9-29272d1aaa11"
      },
      "source": [
        "mtcars = sm.datasets.get_rdataset(\"mtcars\", \"datasets\", cache=True).data\n",
        "df = pd.DataFrame(mtcars)\n",
        "print(df)"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                      mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  \\\n",
            "Mazda RX4            21.0    6  160.0  110  3.90  2.620  16.46   0   1     4   \n",
            "Mazda RX4 Wag        21.0    6  160.0  110  3.90  2.875  17.02   0   1     4   \n",
            "Datsun 710           22.8    4  108.0   93  3.85  2.320  18.61   1   1     4   \n",
            "Hornet 4 Drive       21.4    6  258.0  110  3.08  3.215  19.44   1   0     3   \n",
            "Hornet Sportabout    18.7    8  360.0  175  3.15  3.440  17.02   0   0     3   \n",
            "Valiant              18.1    6  225.0  105  2.76  3.460  20.22   1   0     3   \n",
            "Duster 360           14.3    8  360.0  245  3.21  3.570  15.84   0   0     3   \n",
            "Merc 240D            24.4    4  146.7   62  3.69  3.190  20.00   1   0     4   \n",
            "Merc 230             22.8    4  140.8   95  3.92  3.150  22.90   1   0     4   \n",
            "Merc 280             19.2    6  167.6  123  3.92  3.440  18.30   1   0     4   \n",
            "Merc 280C            17.8    6  167.6  123  3.92  3.440  18.90   1   0     4   \n",
            "Merc 450SE           16.4    8  275.8  180  3.07  4.070  17.40   0   0     3   \n",
            "Merc 450SL           17.3    8  275.8  180  3.07  3.730  17.60   0   0     3   \n",
            "Merc 450SLC          15.2    8  275.8  180  3.07  3.780  18.00   0   0     3   \n",
            "Cadillac Fleetwood   10.4    8  472.0  205  2.93  5.250  17.98   0   0     3   \n",
            "Lincoln Continental  10.4    8  460.0  215  3.00  5.424  17.82   0   0     3   \n",
            "Chrysler Imperial    14.7    8  440.0  230  3.23  5.345  17.42   0   0     3   \n",
            "Fiat 128             32.4    4   78.7   66  4.08  2.200  19.47   1   1     4   \n",
            "Honda Civic          30.4    4   75.7   52  4.93  1.615  18.52   1   1     4   \n",
            "Toyota Corolla       33.9    4   71.1   65  4.22  1.835  19.90   1   1     4   \n",
            "Toyota Corona        21.5    4  120.1   97  3.70  2.465  20.01   1   0     3   \n",
            "Dodge Challenger     15.5    8  318.0  150  2.76  3.520  16.87   0   0     3   \n",
            "AMC Javelin          15.2    8  304.0  150  3.15  3.435  17.30   0   0     3   \n",
            "Camaro Z28           13.3    8  350.0  245  3.73  3.840  15.41   0   0     3   \n",
            "Pontiac Firebird     19.2    8  400.0  175  3.08  3.845  17.05   0   0     3   \n",
            "Fiat X1-9            27.3    4   79.0   66  4.08  1.935  18.90   1   1     4   \n",
            "Porsche 914-2        26.0    4  120.3   91  4.43  2.140  16.70   0   1     5   \n",
            "Lotus Europa         30.4    4   95.1  113  3.77  1.513  16.90   1   1     5   \n",
            "Ford Pantera L       15.8    8  351.0  264  4.22  3.170  14.50   0   1     5   \n",
            "Ferrari Dino         19.7    6  145.0  175  3.62  2.770  15.50   0   1     5   \n",
            "Maserati Bora        15.0    8  301.0  335  3.54  3.570  14.60   0   1     5   \n",
            "Volvo 142E           21.4    4  121.0  109  4.11  2.780  18.60   1   1     4   \n",
            "\n",
            "                     carb  \n",
            "Mazda RX4               4  \n",
            "Mazda RX4 Wag           4  \n",
            "Datsun 710              1  \n",
            "Hornet 4 Drive          1  \n",
            "Hornet Sportabout       2  \n",
            "Valiant                 1  \n",
            "Duster 360              4  \n",
            "Merc 240D               2  \n",
            "Merc 230                2  \n",
            "Merc 280                4  \n",
            "Merc 280C               4  \n",
            "Merc 450SE              3  \n",
            "Merc 450SL              3  \n",
            "Merc 450SLC             3  \n",
            "Cadillac Fleetwood      4  \n",
            "Lincoln Continental     4  \n",
            "Chrysler Imperial       4  \n",
            "Fiat 128                1  \n",
            "Honda Civic             2  \n",
            "Toyota Corolla          1  \n",
            "Toyota Corona           1  \n",
            "Dodge Challenger        2  \n",
            "AMC Javelin             2  \n",
            "Camaro Z28              4  \n",
            "Pontiac Firebird        2  \n",
            "Fiat X1-9               1  \n",
            "Porsche 914-2           2  \n",
            "Lotus Europa            2  \n",
            "Ford Pantera L          4  \n",
            "Ferrari Dino            6  \n",
            "Maserati Bora           8  \n",
            "Volvo 142E              2  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UlxcLPS-m0NO"
      },
      "source": [
        "## Preview Data\n",
        "\n",
        "Use the following data dictionary to understand the attributes available\n",
        "\n",
        "|Attribute | Description |\n",
        "|---------|--------------|\n",
        "|\tmpg\t|Miles/(US) gallon|\n",
        "|\tcyl|\tNumber of cylinders|\n",
        "|\tdisp|\tDisplacement (cu.in.)|\n",
        "|hp|\tGross horsepower|\n",
        "|drat|\tRear axle ratio|\n",
        "|wt|\tWeight (1000 lbs)|\n",
        "|qsec|\t1/4 mile time|\n",
        "|vs|\tEngine (0 = V-shaped, 1 = straight)|\n",
        "|am|\tTransmission (0 = automatic, 1 = manual)|\n",
        "|gear|\tNumber of forward gears|"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gSvao0dlhlNn",
        "outputId": "63a5d14c-4dc0-4d1a-ee98-f14b7462f812"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 32 entries, Mazda RX4 to Volvo 142E\n",
            "Data columns (total 11 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   mpg     32 non-null     float64\n",
            " 1   cyl     32 non-null     int64  \n",
            " 2   disp    32 non-null     float64\n",
            " 3   hp      32 non-null     int64  \n",
            " 4   drat    32 non-null     float64\n",
            " 5   wt      32 non-null     float64\n",
            " 6   qsec    32 non-null     float64\n",
            " 7   vs      32 non-null     int64  \n",
            " 8   am      32 non-null     int64  \n",
            " 9   gear    32 non-null     int64  \n",
            " 10  carb    32 non-null     int64  \n",
            "dtypes: float64(5), int64(6)\n",
            "memory usage: 4.0+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# look at the top rows\n",
        "df.tail(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "SfSPkD1KF62r",
        "outputId": "f5e75763-32de-4925-d133-51053669f09b"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             mpg  cyl   disp   hp  drat    wt  qsec  vs  am  gear  carb\n",
              "Volvo 142E  21.4    4  121.0  109  4.11  2.78  18.6   1   1     4     2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-388603ed-3b22-4225-9d9c-ce661d718af6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Volvo 142E</th>\n",
              "      <td>21.4</td>\n",
              "      <td>4</td>\n",
              "      <td>121.0</td>\n",
              "      <td>109</td>\n",
              "      <td>4.11</td>\n",
              "      <td>2.78</td>\n",
              "      <td>18.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-388603ed-3b22-4225-9d9c-ce661d718af6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-388603ed-3b22-4225-9d9c-ce661d718af6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-388603ed-3b22-4225-9d9c-ce661d718af6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "Mk01Ip_Ehk5c",
        "outputId": "8678a059-211f-497d-892c-60e71c7f5ba2"
      },
      "source": [
        "# look at last rows\n",
        "df.tail(10) "
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  \\\n",
              "AMC Javelin       15.2    8  304.0  150  3.15  3.435  17.30   0   0     3   \n",
              "Camaro Z28        13.3    8  350.0  245  3.73  3.840  15.41   0   0     3   \n",
              "Pontiac Firebird  19.2    8  400.0  175  3.08  3.845  17.05   0   0     3   \n",
              "Fiat X1-9         27.3    4   79.0   66  4.08  1.935  18.90   1   1     4   \n",
              "Porsche 914-2     26.0    4  120.3   91  4.43  2.140  16.70   0   1     5   \n",
              "Lotus Europa      30.4    4   95.1  113  3.77  1.513  16.90   1   1     5   \n",
              "Ford Pantera L    15.8    8  351.0  264  4.22  3.170  14.50   0   1     5   \n",
              "Ferrari Dino      19.7    6  145.0  175  3.62  2.770  15.50   0   1     5   \n",
              "Maserati Bora     15.0    8  301.0  335  3.54  3.570  14.60   0   1     5   \n",
              "Volvo 142E        21.4    4  121.0  109  4.11  2.780  18.60   1   1     4   \n",
              "\n",
              "                  carb  \n",
              "AMC Javelin          2  \n",
              "Camaro Z28           4  \n",
              "Pontiac Firebird     2  \n",
              "Fiat X1-9            1  \n",
              "Porsche 914-2        2  \n",
              "Lotus Europa         2  \n",
              "Ford Pantera L       4  \n",
              "Ferrari Dino         6  \n",
              "Maserati Bora        8  \n",
              "Volvo 142E           2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f8c0d3e-14e2-458c-b548-386f6e96ec22\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AMC Javelin</th>\n",
              "      <td>15.2</td>\n",
              "      <td>8</td>\n",
              "      <td>304.0</td>\n",
              "      <td>150</td>\n",
              "      <td>3.15</td>\n",
              "      <td>3.435</td>\n",
              "      <td>17.30</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Camaro Z28</th>\n",
              "      <td>13.3</td>\n",
              "      <td>8</td>\n",
              "      <td>350.0</td>\n",
              "      <td>245</td>\n",
              "      <td>3.73</td>\n",
              "      <td>3.840</td>\n",
              "      <td>15.41</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Pontiac Firebird</th>\n",
              "      <td>19.2</td>\n",
              "      <td>8</td>\n",
              "      <td>400.0</td>\n",
              "      <td>175</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.845</td>\n",
              "      <td>17.05</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fiat X1-9</th>\n",
              "      <td>27.3</td>\n",
              "      <td>4</td>\n",
              "      <td>79.0</td>\n",
              "      <td>66</td>\n",
              "      <td>4.08</td>\n",
              "      <td>1.935</td>\n",
              "      <td>18.90</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Porsche 914-2</th>\n",
              "      <td>26.0</td>\n",
              "      <td>4</td>\n",
              "      <td>120.3</td>\n",
              "      <td>91</td>\n",
              "      <td>4.43</td>\n",
              "      <td>2.140</td>\n",
              "      <td>16.70</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lotus Europa</th>\n",
              "      <td>30.4</td>\n",
              "      <td>4</td>\n",
              "      <td>95.1</td>\n",
              "      <td>113</td>\n",
              "      <td>3.77</td>\n",
              "      <td>1.513</td>\n",
              "      <td>16.90</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ford Pantera L</th>\n",
              "      <td>15.8</td>\n",
              "      <td>8</td>\n",
              "      <td>351.0</td>\n",
              "      <td>264</td>\n",
              "      <td>4.22</td>\n",
              "      <td>3.170</td>\n",
              "      <td>14.50</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ferrari Dino</th>\n",
              "      <td>19.7</td>\n",
              "      <td>6</td>\n",
              "      <td>145.0</td>\n",
              "      <td>175</td>\n",
              "      <td>3.62</td>\n",
              "      <td>2.770</td>\n",
              "      <td>15.50</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Maserati Bora</th>\n",
              "      <td>15.0</td>\n",
              "      <td>8</td>\n",
              "      <td>301.0</td>\n",
              "      <td>335</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.570</td>\n",
              "      <td>14.60</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Volvo 142E</th>\n",
              "      <td>21.4</td>\n",
              "      <td>4</td>\n",
              "      <td>121.0</td>\n",
              "      <td>109</td>\n",
              "      <td>4.11</td>\n",
              "      <td>2.780</td>\n",
              "      <td>18.60</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f8c0d3e-14e2-458c-b548-386f6e96ec22')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1f8c0d3e-14e2-458c-b548-386f6e96ec22 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1f8c0d3e-14e2-458c-b548-386f6e96ec22');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# look at last rows\n",
        "df.tail(5) "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "dIpl-ikNGMBq",
        "outputId": "c0f580b1-570f-4acd-def0-698f11191982"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 mpg  cyl   disp   hp  drat     wt  qsec  vs  am  gear  carb\n",
              "Lotus Europa    30.4    4   95.1  113  3.77  1.513  16.9   1   1     5     2\n",
              "Ford Pantera L  15.8    8  351.0  264  4.22  3.170  14.5   0   1     5     4\n",
              "Ferrari Dino    19.7    6  145.0  175  3.62  2.770  15.5   0   1     5     6\n",
              "Maserati Bora   15.0    8  301.0  335  3.54  3.570  14.6   0   1     5     8\n",
              "Volvo 142E      21.4    4  121.0  109  4.11  2.780  18.6   1   1     4     2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d1b93656-00cf-4c11-a8f7-e6bf3bf08f81\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Lotus Europa</th>\n",
              "      <td>30.4</td>\n",
              "      <td>4</td>\n",
              "      <td>95.1</td>\n",
              "      <td>113</td>\n",
              "      <td>3.77</td>\n",
              "      <td>1.513</td>\n",
              "      <td>16.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ford Pantera L</th>\n",
              "      <td>15.8</td>\n",
              "      <td>8</td>\n",
              "      <td>351.0</td>\n",
              "      <td>264</td>\n",
              "      <td>4.22</td>\n",
              "      <td>3.170</td>\n",
              "      <td>14.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ferrari Dino</th>\n",
              "      <td>19.7</td>\n",
              "      <td>6</td>\n",
              "      <td>145.0</td>\n",
              "      <td>175</td>\n",
              "      <td>3.62</td>\n",
              "      <td>2.770</td>\n",
              "      <td>15.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Maserati Bora</th>\n",
              "      <td>15.0</td>\n",
              "      <td>8</td>\n",
              "      <td>301.0</td>\n",
              "      <td>335</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.570</td>\n",
              "      <td>14.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Volvo 142E</th>\n",
              "      <td>21.4</td>\n",
              "      <td>4</td>\n",
              "      <td>121.0</td>\n",
              "      <td>109</td>\n",
              "      <td>4.11</td>\n",
              "      <td>2.780</td>\n",
              "      <td>18.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1b93656-00cf-4c11-a8f7-e6bf3bf08f81')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d1b93656-00cf-4c11-a8f7-e6bf3bf08f81 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d1b93656-00cf-4c11-a8f7-e6bf3bf08f81');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "7Hxb10xChiAf",
        "outputId": "2d6ec78e-9b47-416b-b30f-89cc9de298bc"
      },
      "source": [
        "# get a summary of the dataset\n",
        "df.describe()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             mpg        cyl        disp          hp       drat         wt  \\\n",
              "count  32.000000  32.000000   32.000000   32.000000  32.000000  32.000000   \n",
              "mean   20.090625   6.187500  230.721875  146.687500   3.596563   3.217250   \n",
              "std     6.026948   1.785922  123.938694   68.562868   0.534679   0.978457   \n",
              "min    10.400000   4.000000   71.100000   52.000000   2.760000   1.513000   \n",
              "25%    15.425000   4.000000  120.825000   96.500000   3.080000   2.581250   \n",
              "50%    19.200000   6.000000  196.300000  123.000000   3.695000   3.325000   \n",
              "75%    22.800000   8.000000  326.000000  180.000000   3.920000   3.610000   \n",
              "max    33.900000   8.000000  472.000000  335.000000   4.930000   5.424000   \n",
              "\n",
              "            qsec         vs         am       gear     carb  \n",
              "count  32.000000  32.000000  32.000000  32.000000  32.0000  \n",
              "mean   17.848750   0.437500   0.406250   3.687500   2.8125  \n",
              "std     1.786943   0.504016   0.498991   0.737804   1.6152  \n",
              "min    14.500000   0.000000   0.000000   3.000000   1.0000  \n",
              "25%    16.892500   0.000000   0.000000   3.000000   2.0000  \n",
              "50%    17.710000   0.000000   0.000000   4.000000   2.0000  \n",
              "75%    18.900000   1.000000   1.000000   4.000000   4.0000  \n",
              "max    22.900000   1.000000   1.000000   5.000000   8.0000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bac8fecc-30be-42e0-9326-cbd5a92c8450\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cyl</th>\n",
              "      <th>disp</th>\n",
              "      <th>hp</th>\n",
              "      <th>drat</th>\n",
              "      <th>wt</th>\n",
              "      <th>qsec</th>\n",
              "      <th>vs</th>\n",
              "      <th>am</th>\n",
              "      <th>gear</th>\n",
              "      <th>carb</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>32.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>20.090625</td>\n",
              "      <td>6.187500</td>\n",
              "      <td>230.721875</td>\n",
              "      <td>146.687500</td>\n",
              "      <td>3.596563</td>\n",
              "      <td>3.217250</td>\n",
              "      <td>17.848750</td>\n",
              "      <td>0.437500</td>\n",
              "      <td>0.406250</td>\n",
              "      <td>3.687500</td>\n",
              "      <td>2.8125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.026948</td>\n",
              "      <td>1.785922</td>\n",
              "      <td>123.938694</td>\n",
              "      <td>68.562868</td>\n",
              "      <td>0.534679</td>\n",
              "      <td>0.978457</td>\n",
              "      <td>1.786943</td>\n",
              "      <td>0.504016</td>\n",
              "      <td>0.498991</td>\n",
              "      <td>0.737804</td>\n",
              "      <td>1.6152</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>10.400000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>71.100000</td>\n",
              "      <td>52.000000</td>\n",
              "      <td>2.760000</td>\n",
              "      <td>1.513000</td>\n",
              "      <td>14.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>15.425000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>120.825000</td>\n",
              "      <td>96.500000</td>\n",
              "      <td>3.080000</td>\n",
              "      <td>2.581250</td>\n",
              "      <td>16.892500</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>19.200000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>196.300000</td>\n",
              "      <td>123.000000</td>\n",
              "      <td>3.695000</td>\n",
              "      <td>3.325000</td>\n",
              "      <td>17.710000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>2.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>22.800000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>326.000000</td>\n",
              "      <td>180.000000</td>\n",
              "      <td>3.920000</td>\n",
              "      <td>3.610000</td>\n",
              "      <td>18.900000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>4.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>33.900000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>472.000000</td>\n",
              "      <td>335.000000</td>\n",
              "      <td>4.930000</td>\n",
              "      <td>5.424000</td>\n",
              "      <td>22.900000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>8.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bac8fecc-30be-42e0-9326-cbd5a92c8450')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bac8fecc-30be-42e0-9326-cbd5a92c8450 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bac8fecc-30be-42e0-9326-cbd5a92c8450');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SoJLJMlceORN"
      },
      "source": [
        " \n",
        "# Create basic charts\n",
        "\n",
        "- Line chart\n",
        "- Bar chart\n",
        "- Histogram\n",
        "- Box plot\n",
        "- Scatter plot\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "hDUTvlJXdMaf",
        "outputId": "ed1e2d19-0247-4bc6-e347-b34efc7d6fe0"
      },
      "source": [
        "# Line chart\n",
        "df['mpg'].plot.line(color='red')"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd6165a6a90>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Line chart\n",
        "df['mpg'].plot.line(color='cyan')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "GL-WLgtmGUiO",
        "outputId": "08039026-eb58-47d2-cc4c-465971d9615c"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd6160d8bb0>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "ZqEk5ue2kTHA",
        "outputId": "21ff5c9e-9c38-44c6-ff02-a66f9fd7a54a"
      },
      "source": [
        "# Line chart\n",
        "df['mpg'].plot.barh(color='red', xticks=[0,10,20])"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd6160a9280>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Line chart\n",
        "df['mpg'].plot.barh(color='red', xticks=[0,10,20,30,40])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "lqO8UhHUGhuj",
        "outputId": "c161316d-e7b2-4f06-ff00-ae80ff01576b"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd6160d3e50>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Line chart\n",
        "df['mpg'].plot.barh(color='red', xticks=[0,10,20,30,40,50,60])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "lBB5kOt8GqMd",
        "outputId": "7d58db71-b371-4a06-8f7b-321fbfd32166"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd615e762e0>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f4i3cnmhkSwr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "outputId": "21b1a829-73b5-4130-d441-19809a87257a"
      },
      "source": [
        "# Histogram\n",
        "df['mpg'].plot.hist(bins=15,title='Miles Per Gallon')"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd6140085b0>"
            ]
          },
          "metadata": {},
          "execution_count": 24
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Histogram\n",
        "df['mpg'].plot.hist(bins=50,title='Miles Per Gallon')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "Q3aNkOibHLVj",
        "outputId": "30379c75-cd8b-45d5-df77-1e30ee783d45"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd613dd2340>"
            ]
          },
          "metadata": {},
          "execution_count": 27
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "HxD2cW6QeQE0",
        "outputId": "44f8fc18-9992-49e1-fcd1-4f398c289e7b"
      },
      "source": [
        "# Boxplot\n",
        "df['mpg'].plot.box(color ='red', ylabel = 'test', title = 'this is my chart')\n"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd613c87850>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Boxplot\n",
        "df['mpg'].plot.box(color ='navy', ylabel = '?', title = 'Chart!')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "whgv7eqHHVd0",
        "outputId": "ce0a0b4c-9203-4f93-9bd4-5b9c366a92a0"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd613bddeb0>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "eVOSIP8SeYg3",
        "outputId": "ddf49368-8737-4e08-b532-c68d7a2b82b6"
      },
      "source": [
        "# Scatter plot\n",
        "df.plot.scatter(x='mpg',y='hp',c='wt')"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd617436100>"
            ]
          },
          "metadata": {},
          "execution_count": 31
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Scatter plot\n",
        "df.plot.scatter(x='mpg',y='hp',c='wt', yticks=[100, 200, 300])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "-zxNO4lXHinv",
        "outputId": "a775b254-8cbc-4b5e-b4b2-18f7cf40105b"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd61392e5e0>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
